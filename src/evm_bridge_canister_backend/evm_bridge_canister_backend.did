type NetworkDetails = record {
    network_name: text;
    rpc_url: text;
    contract_address: text;
    chain_id: nat64;
};
type InitArgs = vec NetworkDetails;
type ChainSelection = variant {
    mumbai;
    binance;
};
type Result = 
    variant {
        Ok: text;
        Err: text;
    };

service : (InitArgs, text) -> {
    "set_rpc_canister": (text) -> (text);
    "get_gas_price": () -> (text);
    "create_adress_for_owner": () -> (text);
    "get_canister_address" : () -> (text);
    "send_view_rpc_request": (text, ChainSelection, text) -> (text);
    "get_data_from_source": (nat64) -> (Result);
    "rpc_call": (text, opt text) -> (text);
    "read_mumbai_write_binance" : () -> (Result);
    "read_binance_write_mumbai" : () -> (Result);
    
}
